from _typeshed import Incomplete
from typing import Protocol

class Callback(Protocol):
    def __call__(self, sha256: str, progress: float, success: bool, message: str) -> None: ...

class Download:
    url: Incomplete
    sha256: Incomplete
    size: Incomplete
    path: Incomplete
    progress: Incomplete
    canceled: bool
    ssl_unsafe_fallback: Incomplete
    def __init__(self, url: str, sha256: str, size: int, path: str, progress: Callback, *, ssl_unsafe_fallback: bool = ...) -> None: ...
    def cancel(self) -> None: ...
    def connect(self, position: int = ...): ...
    def run(self) -> bool: ...

class Downloader:
    path: Incomplete
    downloads: Incomplete
    def __init__(self, path: str) -> None: ...
    def download(self, url: str, sha256: str, size: int, callback: Callback, *, ssl_unsafe_fallback: bool = ...) -> str: ...
    def cancel(self, sha256: str): ...

downloader: Incomplete
