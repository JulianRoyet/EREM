from _typeshed import Incomplete
from talon import actions as actions, cron as cron, metrics as metrics, settings as settings, speech_system as speech_system, ui as ui
from talon.canvas import Canvas as Canvas
from talon.skia import Paint as Paint
from talon.skia.imagefilter import ImageFilter as ImageFilter
from talon.types import Point2d as Point2d, Rect as Rect

class SubtitlePlan:
    canvas_rect: Rect
    text: str
    paint: Paint
    pos: Point2d
    expiry: float
    @property
    def expired(self) -> bool: ...
    def __init__(self, canvas_rect, text, paint, pos, expiry) -> None: ...

class Subtitles:
    lock: Incomplete
    canvas: Incomplete
    job: Incomplete
    plan: Incomplete
    shadow_filter: Incomplete
    def __init__(self) -> None: ...
    def clear(self) -> None: ...
    def layout_text(self, text: str) -> SubtitlePlan: ...
    def display(self, text: str) -> None: ...
    def draw(self, canvas) -> None: ...

class SpeechSubtitles:
    subtitles: Incomplete
    was_enabled: bool
    def __init__(self) -> None: ...
    @property
    def enabled(self) -> bool: ...
    def on_pre_phrase(self, j) -> None: ...
    def on_post_phrase(self, j) -> None: ...

speech_subtitles: Incomplete
