from _typeshed import Incomplete
from talon.debug import log_exception as log_exception
from typing import Any, Iterator

class Buffer:
    chunk: Incomplete
    pos: Incomplete
    order: Incomplete
    def __init__(self, chunk: bytes, *, pos: int = ..., order: str = ...) -> None: ...
    def unpack(self, fmt: str): ...

def parse_exif(chunk: bytes) -> dict[int, Any]: ...
def iter_chunks(path: str) -> Iterator[tuple[bytes, bytes, bool]]: ...
def is_retina(path: str) -> bool: ...
