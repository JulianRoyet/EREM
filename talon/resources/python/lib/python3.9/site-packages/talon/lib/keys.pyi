from _typeshed import Incomplete
from typing import Optional, Tuple

METAS: Incomplete
REMAP: Incomplete
key_re: Incomplete

class Key:
    name: str
    mods: Tuple[str, ...]
    behavior: Optional[str]
    @property
    def canonical(self) -> str: ...
    def __init__(self, name, mods, behavior) -> None: ...

def parse_keys(key: str) -> list[Key]: ...
