import threading
from .registry import Registry as Registry
from .types import ScriptImpl as ScriptImpl
from talon.scripting import Dispatch as Dispatch, rctx as rctx

class HotkeyData:
    down: dict[str, list['ScriptImpl']]
    up: dict[str, list['ScriptImpl']]
    passive: dict[str, list['ScriptImpl']]
    repeat: dict[str, list['ScriptImpl']]
    @property
    def all(self) -> list[str]: ...
    def __bool__(self) -> bool: ...
    def __init__(self, down, up, passive, repeat) -> None: ...

class BaseHotkeySystem(Dispatch):
    registry: Registry
    lock: threading.RLock
    hotkeys: HotkeyData
    def __init__(self, registry: Registry = ...) -> None: ...
    def run(self, impls: list['ScriptImpl']) -> None: ...
