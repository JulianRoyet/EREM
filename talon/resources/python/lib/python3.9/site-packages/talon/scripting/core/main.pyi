from _typeshed import Incomplete
from talon.scripting import Module as Module, rctx as rctx
from typing import Any, Union

main: Incomplete
key_wait: Incomplete
key_hold: Incomplete
insert_wait: Incomplete

class MainActions:
    def skip() -> None: ...
    def sleep(duration: Union[float, str]): ...
    def print(obj: Any): ...
    def insert(text: str): ...
    def auto_insert(text: str): ...
    def auto_format(text: str) -> str: ...
    def key(key: str): ...
    def mouse_move(x: float, y: float): ...
    def mouse_click(button: int = ...): ...
    def mouse_drag(button: int = ...): ...
    def mouse_release(button: int = ...): ...
    def mouse_scroll(y: float = ..., x: float = ..., by_lines: bool = ...): ...
    def mouse_x() -> float: ...
    def mouse_y() -> float: ...
    def mimic(text: str): ...

HOSTNAME: Incomplete

def scope(languages: Union[str, set[str]] = ...): ...
def number_small(m) -> int: ...
def number(m) -> int: ...
def number_signed(m) -> int: ...
def digits(m) -> int: ...
def digit_string(m) -> str: ...
