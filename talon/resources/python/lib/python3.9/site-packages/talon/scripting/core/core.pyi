from _typeshed import Incomplete
from talon import ctrl as ctrl
from talon.experimental import screen_lock as screen_lock
from talon.grammar import Capture as Capture
from talon.scripting import Module as Module, rctx as rctx
from talon.scripting.talon_script import TalonScript as TalonScript, TalonScriptError as TalonScriptError
from talon.scripting.types import CommandImpl as CommandImpl, ScriptImpl as ScriptImpl
from typing import List, Sequence, Tuple

class PhraseCancelException(Exception): ...

core: Incomplete
history_length: Incomplete
phrase_history: List[Capture]
phrase_command_history: List[List[Tuple[CommandImpl, Capture]]]
command_history: List[Tuple[CommandImpl, Capture]]
current_commands: List[List[Tuple[CommandImpl, Capture]]]
cmd_replace: List[List[Tuple[CommandImpl, Capture]]]

class CoreActions:
    def recent_phrases() -> Sequence[Capture]: ...
    def last_phrase() -> Capture: ...
    def recent_commands() -> Sequence[Sequence[Tuple[CommandImpl, Capture]]]: ...
    def last_command() -> Tuple[CommandImpl, Capture]: ...
    def replace_command(commands: Sequence[Tuple[CommandImpl, Capture]]): ...
    def repeat_partial_phrase(times: int = ...): ...
    def repeat_phrase(times: int = ...): ...
    def repeat_command(times: int = ...): ...
    def current_command__unstable() -> Tuple[CommandImpl, Capture]: ...
    def cancel_phrase__unstable() -> None: ...
    def run_phrase(phrase: Capture): ...
    def run_hotkey(hotkey: ScriptImpl): ...
    def run_command(cmd: CommandImpl, m: Capture): ...
    def run_talon_script(ctx: rctx.ResourceContext, script: TalonScript, m: Capture): ...
