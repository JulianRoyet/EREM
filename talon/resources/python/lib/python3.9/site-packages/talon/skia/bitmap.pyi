from .canvas import Canvas as Canvas
from .ffi import ffi as ffi, lib as lib
from .image import Image as Image
from .pixmap import Pixmap as Pixmap
from .util import color_from_sk as color_from_sk, color_to_sk as color_to_sk, colortype_width as colortype_width
from _typeshed import Incomplete

class Bitmap:
    ColorType: Incomplete
    AlphaType: Incomplete
    handle: Incomplete
    def __init__(self, width, height, color_type=..., alpha_type=..., ctable: Incomplete | None = ...) -> None: ...
    def make_canvas(self): ...
    def make_image(self): ...
    @property
    def info(self): ...
    @property
    def pixels(self): ...
    @pixels.setter
    def pixels(self, pixels, ctable=...) -> None: ...
    @property
    def row_bytes(self): ...
    @property
    def byte_count(self): ...
    def reset(self): ...
    def is_null(self): ...
    def is_immutable(self): ...
    def set_immutable(self): ...
    def erase(self, color): ...
    def get_pixel(self, x, y): ...
    def set_pixel(self, x, y, color) -> None: ...
    def get_colortable(self): ...
    def notify_pixels_changed(self): ...
    def __del__(self) -> None: ...
