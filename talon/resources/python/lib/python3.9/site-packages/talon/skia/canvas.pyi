from .font import Font as Font
from .paint import Paint as Paint
from .textblob import TextBlob as TextBlob
from .util import color_from_sk as color_from_sk, color_to_sk as color_to_sk, points_to_sk as points_to_sk
from _typeshed import Incomplete
from collections.abc import Generator
from talon.api import ffi as ffi, lib as lib
from talon.types import NameEnum as NameEnum, Rect as Rect

class Canvas:
    class PointMode(NameEnum):
        POINTS: Incomplete
        LINES: Incomplete
        POLYGON: Incomplete
    class ClipOp(NameEnum):
        DIFFERENCE: Incomplete
        INTERSECT: Incomplete
    @classmethod
    def from_bitmap(cls, bitmap): ...
    handle: Incomplete
    paint: Incomplete
    rect: Incomplete
    paint_stack: Incomplete
    def __init__(self, handle, x: Incomplete | None = ..., y: Incomplete | None = ..., width: Incomplete | None = ..., height: Incomplete | None = ...) -> None: ...
    x: Incomplete
    y: Incomplete
    width: Incomplete
    height: Incomplete
    def contains(self, x, y): ...
    def destroy(self) -> None: ...
    def saved(self) -> Generator[None, None, None]: ...
    def save(self): ...
    def save_layer(self, rect, paint: Incomplete | None = ...): ...
    def restore(self) -> None: ...
    def translate(self, dx, dy) -> None: ...
    def scale(self, sx, sy) -> None: ...
    def rotate_degrees(self, degrees) -> None: ...
    def rotate_radians(self, radians) -> None: ...
    def skew(self, sx, sy) -> None: ...
    def concat(self, matrix) -> None: ...
    def quick_reject(self, rect): ...
    def clip_rect(self, rect: Rect, op: ClipOp = ...) -> None: ...
    def clip_rrect(self, rrect, op: ClipOp = ...) -> None: ...
    def clip_region(self, region, op: ClipOp = ...) -> None: ...
    def clip_path(self, path, op: ClipOp = ...) -> None: ...
    def draw_paint(self, paint: Incomplete | None = ...) -> None: ...
    def draw_rect(self, rect, paint: Incomplete | None = ...) -> None: ...
    def draw_rrect(self, rrect, paint: Incomplete | None = ...) -> None: ...
    def draw_region(self, region, paint: Incomplete | None = ...) -> None: ...
    def draw_circle(self, cx, cy, rad, paint: Incomplete | None = ...) -> None: ...
    def draw_oval(self, rect, paint: Incomplete | None = ...) -> None: ...
    def draw_path(self, path, paint: Incomplete | None = ...) -> None: ...
    def draw_image(self, image, x, y, paint: Incomplete | None = ...) -> None: ...
    def draw_image_rect(self, image, src, dst, paint: Incomplete | None = ...) -> None: ...
    def draw_picture(self, picture, matrix, paint: Incomplete | None = ...) -> None: ...
    def clear(self, color) -> None: ...
    def discard(self) -> None: ...
    def get_save_count(self): ...
    def restore_to_count(self, saveCount) -> None: ...
    def draw_color(self, color, mode) -> None: ...
    def draw_points(self, mode, points, paint: Incomplete | None = ...) -> None: ...
    def draw_point(self, x, y, paint: Incomplete | None = ...) -> None: ...
    def draw_line(self, x0, y0, x1, y1, paint: Incomplete | None = ...) -> None: ...
    def draw_text(self, text, x, y, paint: Incomplete | None = ...) -> None: ...
    def reset_matrix(self) -> None: ...
    def set_matrix(self, matrix) -> None: ...
    def get_total_matrix(self, matrix) -> None: ...
    def draw_round_rect(self, rect, rx, ry, paint: Incomplete | None = ...) -> None: ...
    def clip_rect_with_operation(self, rect, op, doAA) -> None: ...
    def clip_path_with_operation(self, rect, op, doAA) -> None: ...
    def clip_rrect_with_operation(self, rect, op, doAA) -> None: ...
    def get_local_clip_bounds(self): ...
    def get_device_clip_bounds(self): ...
    def flush(self) -> None: ...
    def draw_annotation(self, rect, key, value) -> None: ...
    def draw_url_annotation(self, rect, value) -> None: ...
    def draw_named_destination_annotation(self, point, value) -> None: ...
    def draw_link_destination_annotation(self, rect, value) -> None: ...
    def draw_image_lattice(self, image, lattice, dst, paint: Incomplete | None = ...) -> None: ...
    def draw_image_nine(self, image, center, dst, paint: Incomplete | None = ...) -> None: ...
    def draw_vertices(self, vertices, mode, paint: Incomplete | None = ...) -> None: ...
