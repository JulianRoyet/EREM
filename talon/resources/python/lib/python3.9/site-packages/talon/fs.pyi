from _typeshed import Incomplete
from collections import defaultdict as defaultdict, namedtuple as namedtuple
from talon.api import ffi as ffi, ffi_string as ffi_string, lib as lib
from talon.fs_shadow import FsCreate as FsCreate, FsModify as FsModify, FsRemove as FsRemove, FsShadow as FsShadow
from talon.scripting import dispatch as dispatch, rctx as rctx
from talon.scripting.tree import PathTree as PathTree
from typing import Callable

class FsEventFlags:
    exists: bool
    renamed: bool
    def __init__(self, exists, renamed) -> None: ...

shadow: Incomplete
lock: Incomplete

def async_fsevent(changes) -> None: ...
def on_fsevent(bpath: bytes) -> None: ...

tree: Incomplete
CallbackType = Callable[[str, FsEventFlags], None]

def watch(path: str, cb: CallbackType) -> None: ...
def unwatch(path: str, cb: CallbackType) -> None: ...
