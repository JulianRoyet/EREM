from typing import Iterable, Union

class Span:
    a: int
    b: int
    def __init__(self, a: int, b: int) -> None: ...
    def __len__(self): ...
    def __bool__(self): ...
    def __iter__(self) -> Iterable[int]: ...
    def __contains__(self, value: Union[int, 'Span']) -> bool: ...
    def __add__(self, offset: int) -> Span: ...
    def __sub__(self, offset: int) -> Span: ...
    @property
    def left(self): ...
    @property
    def right(self): ...
    @property
    def slice(self) -> slice: ...
    @property
    def range(self) -> range: ...
    def copy(self) -> Span: ...
    def extend(self, b: Union[int, 'Span']) -> Span: ...
    def intersect(self, other: Span) -> Span: ...
    def intersects(self, other: Span) -> bool: ...
