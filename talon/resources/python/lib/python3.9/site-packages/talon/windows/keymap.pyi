from _typeshed import Incomplete
from talon.api import ffi as ffi, lib as lib
from typing import Iterable, Optional

MAPVK_VK_TO_VSC: int
KEYEVENTF_UNICODE: int
KEYEVENTF_SCANCODE: int

def get_layout(): ...
def key_to_vk(key: str) -> tuple[int, set[str]]: ...
def vk_to_scan(vk: int) -> int: ...

class MappedKey:
    code: Optional[int]
    scans: list[int]
    basic_mods: set[str]
    exact_mods: set[str]
    mod_scans: list[tuple[int, int]]
    flags: int
    def __init__(self, code, scans, basic_mods, exact_mods, mod_scans, flags) -> None: ...

VALID_MODS: Incomplete
KNOWN_MODS: Incomplete

def map_key(key: str, mods: Iterable[str] = ...) -> MappedKey: ...
