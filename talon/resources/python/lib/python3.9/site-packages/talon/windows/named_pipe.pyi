import socketserver
from _typeshed import Incomplete

class PipeFile:
    pipe: Incomplete
    bufsize: Incomplete
    def __init__(self, pipe, bufsize: int = ...) -> None: ...
    @classmethod
    def connect(cls, path: str) -> PipeFile: ...
    def recv(self, size: int) -> bytes: ...
    def send(self, data: bytes) -> int: ...
    def read(self) -> str: ...
    readline: Incomplete
    def write(self, data: str) -> None: ...
    def close(self) -> None: ...
    def flush(self) -> None: ...

class NamedPipeServer(socketserver.BaseServer):
    bufsize: int
    def serve_forever(self, poll_interval: float = ...) -> None: ...
    def handle_request(self) -> None: ...
    def get_request(self): ...
    def close_request(self, request) -> None: ...
