from . import parser as parser
from .parser import Alt as Alt, Container as Container, ListRef as ListRef, Literal as Literal, Node as Node, Opt as Opt, Rep as Rep, RuleRef as RuleRef, Seq as Seq
from talon.grammar import Grammar as Grammar, Rule as Rule

def link_node(node: Node, rules: dict[str, tuple[Rule, bool]], rule_cache: dict[str, Node]): ...
def link(grammar: Grammar) -> Node: ...
def link_str_node(node: Node, rules: dict[str, tuple[Rule, bool]], rule_cache: dict[str, str]) -> str: ...
def link_str(grammar: Grammar) -> str: ...
def cache_key(grammar: Grammar) -> str: ...
