from _typeshed import Incomplete
from talon import Dispatch
from talon.lib import cubeb

class NoiseStream:
    ctx: Incomplete
    noise: Incomplete
    stream: Incomplete
    def __init__(self, device: cubeb.DeviceInfo = ...) -> None: ...
    def close(self) -> None: ...
    def __del__(self) -> None: ...

class Noise(Dispatch):
    lock: Incomplete
    topics: int
    noise_stream: Incomplete
    def __init__(self) -> None: ...
    def process(self, flags: int) -> None: ...
    def register_first(self, topic: str) -> None: ...
    def mic_change(self, mic: cubeb.DeviceInfo): ...
    def unregister_last(self, topic: str) -> None: ...

register: Incomplete
unregister: Incomplete
